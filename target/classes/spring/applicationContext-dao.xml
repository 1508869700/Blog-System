<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans.xsd
                    http://www.springframework.org/schema/context
                    http://www.springframework.org/schema/context/spring-context.xsd">

  <!-- 1.加载db配置文件 -->
  <context:property-placeholder location="classpath:db.properties"/>

  <!-- 2.数据库连接 -->
  <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
    <property name="driverClassName" value="${jdbc.driver}"/>
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <property name="filters" value="${filters}"/>
    <!-- 最大并发连接数 -->
    <property name="maxActive" value="${maxActive}"/>
    <!-- 初始化连接数量 -->
    <property name="initialSize" value="${initialSize}"/>
    <!-- 配置获取连接等待超时的时间 -->
    <property name="maxWait" value="${maxWait}"/>
    <!-- 最小空闲连接数 -->
    <property name="minIdle" value="${minIdle}"/>
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>
    <property name="validationQuery" value="${validationQuery}"/>
    <property name="testWhileIdle" value="${testWhileIdle}"/>
    <property name="testOnBorrow" value="${testOnBorrow}"/>
    <property name="testOnReturn" value="${testOnReturn}"/>
    <property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>
    <!-- 打开 removeAbandoned 功能 -->
    <property name="removeAbandoned" value="${removeAbandoned}"/>
    <!-- 1800 秒，也就是 30 分钟 -->
    <property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>
    <!-- 关闭 abanded 连接时输出错误日志 -->
    <property name="logAbandoned" value="${logAbandoned}"/>
  </bean>


  <!-- 4.Mybatis工厂（Spring容器里配置Mybatis工厂
       所以需要去spring-mybatis整合包里去找sqlSessionFactoryBean）-->
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <!-- 配置Mybatis工厂需要先读取mybatis配置文件 ! ! ! 别名和mapper映射可以被取代啦 -->
    <!--    <property name="configLocation" value="mybatis-config.xml"/>-->
    <!-- 获取数据源 -->
    <property name="dataSource" ref="dataSource"/>
    <property name="typeAliasesPackage" value="com.XChen.model"/>
    <!-- 自动扫描mapping.xml文件 -->
    <property name="mapperLocations" value="classpath*:mapper/*.xml"/>
    <!--    <property name="mapperLocations" value="classpath*:com/XChen/mapperconfig/*.xml"/>-->
  </bean>

  <!-- 5.Mapper代理开发终极版 自动扫描Dao层的Mapper文件  并且自动装配，所以不需要在Dao接口配置@Autowired ???? 和第三条冲突吗-->
  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.XChen.dao"/>
  </bean>


</beans>
